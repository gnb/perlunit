DESCRIPTION
    Test::Unit provides a simple framework for convenient unit testing.
    
    You test a given unit (a script, a module, whatever) by creating 
    a new Test::Unit object and configuring this object with three
    subroutine references: the test to run, a setup to provide
    resources you need for the test, and a corresponding teardown of
    the resources created in the setup routine. You may omit any of
    these.
    
    You can build trees of test suites by adding Test::Unit objects
    to each other by calling the add() method. A Test::Unit object
    will run all tests for all Test::Unit objects added to it. 
    
    For convenience, you can automatically build a test suite for a 
    given package by calling Test::Unit->create_suite(). This 
    will build a test case for each subroutine in the package given
    that has a name starting with "test" and pack them all together
    into one Test::Unit object for easy testing. If you dont give
    a package name to Test::Unit->create_suite(), the current package
    is taken as default.
    
    Test output is one status line (a "." for every successful test run,
    or an "F" for any failed test run, to indicate progress), one result
    line ("OK (n tests)" or "!!!FAILURES!!!"), and possibly many lines 
    reporting detailed error messages for any failed tests.
    
COPYRIGHT
    Copyright (c) 2000 Christian Lemburg.
    All rights reserved. This program is free software; you can 
    redistribute it and/or modify it under the same terms as Perl itself. 

PREREQUISITES
    None.

INSTALLATION
    Just perform the usual incantation:
        
	gunzip Test-Unit-0.06.tar.gz
	tar -xvf Test-Unit-0.06.tar 
	cd Test-Unit-0.06
	perl Makefile.PL
        make
        make test
        make install

TODO
    Add timing of tests (does anybody really want this?).

AUTHOR
    Christian Lemburg <lemburg@acm.org>

SEE ALSO
    Refactoring. Improving The Design Of Existing Code. Martin
    Fowler. Addison-Wesley, 1999.

    http://www.xProgramming.com/

